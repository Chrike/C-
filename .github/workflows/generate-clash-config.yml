name: Generate Clash Config and Push to Gist

on:
  schedule:
    # Run daily at 00:00 UTC (adjust cron as needed)
    - cron: '0 0 * * *'
  workflow_dispatch: # Allows manual triggering

jobs:
  generate_and_push_gist:
    runs-on: ubuntu-latest
    # No longer needs contents: write permission for the repo
    # permissions:
    #   contents: read # Only needs read to checkout

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        # No need for persist-credentials anymore

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          # Cache can be removed if you don't have package-lock.json
          # cache: 'npm'

      - name: Install dependencies
        # If you added package.json, use 'npm install'
        # Otherwise, use 'npm install js-yaml'
        run: npm install js-yaml # Or 'npm install' if you have package.json

      - name: Create temporary directory for proxies
        run: mkdir -p temp_data

      - name: Fetch latest proxy list
        id: fetch_proxies
        run: |
          echo "Fetching proxy list..."
          curl -f -L -S -s -o temp_data/proxies.yaml 'https://gist.githubusercontent.com/Chrike/9a70063363aca87a35fbad9ffb9fdcfd/raw/all.yaml'
          echo "Proxy list download command finished."
          if [ ! -s temp_data/proxies.yaml ]; then
            echo "Warning: Downloaded proxy list is empty or download failed. Proceeding..."
          else
            echo "Proxy list downloaded successfully."
          fi

      - name: Generate Clash configuration
        id: generate_config
        run: |
          echo "Running Node.js script to generate config..."
          node generate-clash-config.js temp_data/proxies.yaml clash_config.yaml
          echo "Node.js script finished."
          if [ ! -f clash_config.yaml ]; then
             echo "Error: clash_config.yaml was not created by the script."
             exit 1
          fi
          echo "clash_config.yaml generated."
      # --- 新增检查步骤 ---
      - name: Check generated file existence and content
        run: |
          ls -l clash_config.yaml # 打印文件信息
          if [ ! -s clash_config.yaml ]; then # -s 检查文件是否存在且不为空
            echo "Error: clash_config.yaml is missing or empty!"
            exit 1
          fi
          echo "clash_config.yaml exists and is not empty."
      # --- New Step: Update Gist ---
      - name: Update Gist with generated config
        env:
          # Use the PAT secret for authentication with gh cli
          GITHUB_TOKEN: ${{ secrets.GIST_PAT }}
          # Get the Gist ID from secrets
          GIST_ID: ${{ secrets.GIST_ID }}
          # Get the target filename in Gist from secrets, fallback to clash_config.yaml
          GIST_FILENAME: ${{ secrets.GIST_FILENAME || 'clash_config.yaml' }}
        run: |
          if [ -z "$GITHUB_TOKEN" ]; then
            echo "Error: GIST_PAT secret is not set."
            exit 1
          fi
          if [ -z "$GIST_ID" ]; then
            echo "Error: GIST_ID secret is not set."
            exit 1
          fi
          echo "Updating Gist $GIST_ID with file $GIST_FILENAME..."
          gh gist edit "$GIST_ID" --filename "$GIST_FILENAME" < clash_config.yaml
          echo "Gist update command finished."

      - name: Clean up temporary files
        if: always()
        run: |
          echo "Cleaning up temporary directory..."
          rm -rf temp_data
          echo "Cleanup finished."
